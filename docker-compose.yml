version: '2'

services:
    app:
        build: ./webrecorder
        command: uwsgi /code/apps/frontend.ini

        env_file:
            - ./wr.env

        depends_on:
            - webagg
            - recorder
            - redis
            - shepherd

        volumes:
            - ./webrecorder/:/code/
            - ./wr.yaml:/wr.yaml

        ports:
            - 8080:8080

    recorder:
        build: ./webrecorder
        command: uwsgi /code/apps/rec.ini

        env_file:
            - ./wr.env

        depends_on:
            - webagg
            - redis

        volumes:
            - ./webrecorder/:/code/

        volumes_from:
            - data

    webagg:
        build: ./webrecorder
        command: uwsgi /code/apps/load.ini

        env_file:
            - ./wr.env

        depends_on:
            - redis

        volumes:
            - ./webrecorder/:/code/

        volumes_from:
            - data


    nginx:
        build: ./nginx
        depends_on:
            - app

        volumes_from:
            - app
            - shepherd
            - data

        ports:
            - "8089:80"

    shepherd:
        image: webrecorder/shepherd

        command: uwsgi uwsgi.ini --mount /api/browsers=/shepherd/main.py

        env_file:
            - ./wr.env

        environment:
            - SCREEN_WIDTH=1280
            - SCREEN_HEIGHT=800
            - CLUSTER_NAME=wr_users
            - NETWORK_NAME=webrecorder_browsers
            - PROXY_HOST=proxy
            - PROXY_PORT=8080

        depends_on:
            - redis

        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

        ports:
            - "9020:9020"

    proxy:
        build: ./proxy

        env_file:
            - ./wr.env

        depends_on:
            - redis

        volumes:
            #- ./proxy/certs:/home/apprun/.mitmproxy
            - ./proxy/certs:/certs

        networks:
            - default
            - browsers

    redis:
        build: ./redis

        env_file:
            - ./wr.env

        ports:
            - "6379:6379"
  
        volumes_from:
            - data

    # Postfix (if sending mail locally)
    mailserver:
        restart: always
        image: catatnight/postfix

        environment:
            - "maildomain=localhost"
            - "smtp_user=test:archive"


    # Data Only Volume
    data:
        image: python:3.5.2

        command: python -i
      
        volumes:
            - ./data:/data
            - ./wr.yaml:/wr.yaml


networks:
    default:
        driver: bridge


    browsers:
        driver: bridge

