version: '2'

services:
    app:
        build: ./webrecorder
        command: uwsgi /code/apps/apiapp.ini

        env_file:
            - ./wr.env

        depends_on:
            - warcserver
            - recorder
            - redis
            - shepherd

        volumes:
            - ./webrecorder/:/code/
            - ./webrecorder/proxy-certs:/code/proxy-certs

        networks:
            - default
            - browsers

    frontend:
        build:
            context: ./frontend

        env_file:
            - ./wr.env

        command: sh run.sh

        depends_on:
            - app

        volumes:
            - ./frontend/:/code/
            - /code/node_modules

        ports:
            - 8096:8096 # for HMR on dev

    recorder:
        build: ./webrecorder
        command: uwsgi /code/apps/rec.ini

        env_file:
            - ./wr.env

        depends_on:
            - warcserver
            - redis

        volumes:
            - ./webrecorder/:/code/
            - ./data:/data

    warcserver:
        build: ./webrecorder
        command: uwsgi /code/apps/load.ini

        env_file:
            - ./wr.env

        depends_on:
            - redis

        volumes:
            - ./webrecorder/:/code/
            - ./data:/data

    nginx:
        build: ./nginx
        image: webrecorder/nginx
        depends_on:
            - app
            - frontend

        volumes:
            - ./data:/data
            - ./webrecorder/:/code/
            - ./frontend/:/frontend/

        ports:
            - 8089:80
            - 8092:81

    shepherd:
        image: oldwebtoday/shepherd

        command: uwsgi uwsgi.ini --mount /api/browsers=/shepherd/main.py

        env_file:
            - ./wr.env

        environment:
            - SCREEN_WIDTH=1280
            - SCREEN_HEIGHT=800

            - PROXY_HOST=app
            - PROXY_PORT=8088
            - PROXY_GET_CA=http://wsgiprox/download/pem

            - CLUSTER_NAME=wr_users
            - NETWORK_NAME=webrecorder_browsers

            - CONTAINER_EXPIRE_SECS=1200
            - IDLE_TIMEOUT=120

        depends_on:
            - redis

        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    redis:
        build: ./redis

        env_file:
            - ./wr.env

        ports:
            - 6379:6379

        volumes:
            - ./data:/data

    fcrepo:
        #image: cbeer/fcrepo4:4.7
        build: ./fcrepo

        ports:
            - 8100:8080

        volumes:
          - ./data/fedora:/data

        environment:
          - JAVA_OPTS=-Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
          - F4_ROOT=http://fcrepo:8080/fcrepo/rest/webrecorder/


    # Postfix (if sending mail locally)
    mailserver:
        restart: always
        image: catatnight/postfix

        environment:
            - "maildomain=localhost"
            - "smtp_user=test:archive"

networks:
    default:
        driver: bridge


    browsers:
        driver: bridge

